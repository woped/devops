name: Python Tests

on:
  workflow_call:

jobs:
  build:
    name: Execute Python Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Check for Python files
        id: check_py
        run: |
          if git ls-files "*.py" | grep -q "."; then
            echo "Python files found"
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo "No Python files found"
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up Python
        if: steps.check_py.outputs.found == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache Python packages
        if: steps.check_py.outputs.found == 'true'
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies (requirements.txt or defaults)
        if: steps.check_py.outputs.found == 'true'
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            echo "Installing from requirements.txt"
            pip install -r requirements.txt
            pip install torch torchvision torchaudio pytest
          else
            echo "requirements.txt not found, installing defaults"
            pip install torch torchvision torchaudio pytest
          fi

      - name: Run tests
        if: steps.check_py.outputs.found == 'true'
        run: |
          pip install coverage
          coverage run -m pytest || EXIT_CODE=$?
          coverage xml
          if [ "$EXIT_CODE" -eq "5" ]; then
            echo "No tests were found. Skipping test phase."
            exit 0
          elif [ "$EXIT_CODE" -ne "0" ]; then
            echo "Tests failed with exit code $EXIT_CODE."
            exit $EXIT_CODE
          else
            echo "All tests passed."
            exit 0
          fi
      - name: Upload coverage report
        if: steps.check_py.outputs.found == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml
